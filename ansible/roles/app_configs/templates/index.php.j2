<?php
use \Psr\Http\Message\ServerRequestInterface as Request;
use \Psr\Http\Message\ResponseInterface as Response;

require './vendor/autoload.php';

$config['displayErrorDetails'] = true;
$config['addContentLengthHeader'] = false;

$config['db']['host']   = "{{ db_host }}";
$config['db']['user']   = "{{ db_user }}";
$config['db']['pass']   = "{{ db_passwd }}";
$config['db']['dbname'] = "{{ db_name }}";

$config['aws']['region'] = "{{ region }}";
$config['aws']['bucket'] = "{{ s3_bucket }}";
$config['aws']['key']    = "{{ AWS_ACCESS_KEY }}";
$config['aws']['secret'] = "{{ AWS_ACCESS_SECRET }}";

$app =  new \Slim\App([
  "settings" => $config
]);

$container = $app->getContainer();
$container['view'] = new \Slim\Views\PhpRenderer("./templates/");

$container['db'] = function ($c) {
    $db = $c['settings']['db'];
    $pdo = new \PDO("mysql:host={$db['host']};dbname={$db['dbname']}", $db['user'], $db['pass']);
    $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
    $pdo->setAttribute(\PDO::ATTR_DEFAULT_FETCH_MODE, \PDO::FETCH_ASSOC);

    return $pdo;
};

$container['s3'] = function ($c) {
    $aws = $c['settings']['aws'];
    $s3 = new Aws\S3\S3Client([
      'version' => 'latest',
      'region'  => $aws['region'],
      'credentials' => [
          'key'    => $aws['key'],
          'secret' => $aws['secret']
      ]
  ]);

    return $s3;
};

$app->get('/', function (Request $request, Response $response) {
    $response = $this->view->render($response, "index.phtml", [
      "files" => $this->get("db")->query("select * from imported_file"),
      "router" => $this->router
    ]);

    return $response;
})->setName("main");


$app->post('/upload', function (Request $request, Response $response) {
    $uploadedFiles = $request->getUploadedFiles();

    if (isset($uploadedFiles['csv'])) {
        $file = $uploadedFiles['csv'];

        $db = $this->get("db");

        // Define Sql query, in case of duplicate key it will update the row
        $insertSQL = "INSERT INTO data (id, item_name, price) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE id=VALUES(id),item_name=VALUES(item_name),price=VALUES(price)";

        // Prepare Sql query to be executed
        $insertStmt = $db->prepare($insertSQL);

        // Define row count variable to get total number of rows inserted
        $rowCount = 0;

        $fHandle = fopen($file->file, 'r');

        // Loop through the file and get contents into an array using fgetcsv
        while ($items = fgetcsv($fHandle, 1000, ',')) {

            // Execute prepared query
            $insertStmt->execute($items);

            // Add 1 to total number of rows inserted
            $rowCount++;
        }

        // Close the opened file
        fclose($fHandle);

        $str = substr(sha1(mt_rand() . microtime()), mt_rand(0,35), 10) . ".csv";

        $insertFileStmt = $db->prepare("INSERT INTO imported_file (`name`, `key`) VALUES (?, ?)");
        $insertFileStmt->execute([$file->getClientFilename(), $str]);

        //save the file to s3
        $s3Client = $this->get("s3");
        $bucketName = $this->get("settings")['aws']['bucket'];

        $s3Client->putObject([
          'Bucket' => $bucketName,
          'Key'    => $str,
          'Body'   => file_get_contents($file->file),
        ]);

        return $response->withRedirect($this->router->pathFor('main'));
    }

    $result = $s3Client->putObject([
      'Bucket' => $bucketName,
      'Key'    => 'my-key',
      'Body'   => 'this is the body!'
    ]);

    return $response;
})->setName("upload");


$app->run();
